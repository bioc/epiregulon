% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regulonPruning.R
\name{filterRegulon}
\alias{filterRegulon}
\title{Retain only target genes that are differential expressed}
\usage{
filterRegulon(
  expMatrix,
  clusters,
  regulon,
  pval.type = c("any", "some", "all"),
  sig_cutoff = 0.05,
  logFC_cutoff = 0.5,
  sig_type = c("FDR", "p.value"),
  logFC_ref = "summary.logFC",
  ...
)
}
\arguments{
\item{expMatrix}{A SingleCellExperiment object or matrix containing gene expression with
genes in the rows and cells in the columns}

\item{clusters}{A character or integer vector of cluster or group labels for single cells}

\item{regulon}{A dataframe informing the gene regulatory relationship with the \code{tf} column
representing transcription factors, \code{idxATAC} corresponding to the index in the peakMatrix and
\code{target} column representing target genes}

\item{pval.type}{A string specifying how p-values are to be combined across pairwise comparisons for a given group/cluster.}

\item{sig_cutoff}{A numeric scalar to specify the cutoff for FDR or pvalue value. Default is 0.05}

\item{logFC_cutoff}{A numeric scalar to specify the cutoff for log fold change. Default is 0.5}

\item{sig_type}{A string specifying whether to use "FDR" or "p.value" for sig_cutoff}

\item{logFC_ref}{A string indicating the reference sample used to compute logFC. Default value is
\code{summary.logFC} which is an average of all pairwise comparisons. Users can also specify
reference sample, for example, \code{DMSO.logFC}.}

\item{...}{additional parameters for scran::findMarkers}
}
\description{
Retain only target genes that are differential expressed
}
\examples{
# create a mock singleCellExperiment object for gene expMatrixession matrix
set.seed(1000)
gene_sce <- scuttle::mockSCE()
gene_sce <- scuttle::logNormCounts(gene_sce)
rownames(gene_sce) <- paste0('Gene_',1:2000)

# create a mock regulon
regulon <- data.frame(tf = c(rep('Gene_1',10), rep('Gene_2',10)),
                     idxATAC = sample(1:100, 20),
                     target = c(paste0('Gene_', sample(3:2000,10)),
                                paste0('Gene_',sample(3:2000,10))))

# filter regulon
pruned.regulon <- filterRegulon(expMatrix = gene_sce, clusters = gene_sce$Treatment,
                               regulon = regulon, sig_cutoff=0.5, logFC_cutoff=0,
                               sig_type = "p.value")

}
\author{
Xiaosai Yao
}
